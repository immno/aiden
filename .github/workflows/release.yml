name: Tauri Build and Package

on:
  push:
    branches:
      - release
    paths:
      - "**/Cargo.toml"
      - ".github/workflows/release.yml"

jobs:
  build-publish:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            arch: x86_64
            target: x86_64-unknown-linux-gnu
          - build: macos
            os: macos-latest
            arch: x86_64
            target: x86_64-apple-darwin
          - build: macos
            os: macos-latest
            arch: aarch64
            target: aarch64-apple-darwin
          - build: windows
            os: windows-latest
            arch: x86_64
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          ref: main
          submodules: true
          fetch-depth: 1
          submodule-recursive: true
          token: ${{ secrets.GH_TOKEN }}

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}
          workspaces: './src-tauri -> target'

      - name: Install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: npm install

      - uses: tauri-apps/tauri-action@v0
        env:
            GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
            tagName: Aiden-v__VERSION__
            releaseName: "Aiden v__VERSION__"
            releaseBody: "See the assets to download this version and install."
            releaseDraft: true
            prerelease: false
            args: ${{ matrix.args }}
